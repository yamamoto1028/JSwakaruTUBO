/***********************************************
  グローバル変数
************************************************/
//カードの山（配列）
//自分のカード（配列）
//相手のカード（配列）
//勝敗判定フラグ（論理型）

/***********************************************
  イベントハンドラの割り当て
************************************************/
//ページ読み込み時の初期処理
window.addEventListener("load", 初期表示);


//「カードを引く」ボタン押下時の処理
document.querySelector("ボタンのID").addEventListener("click", カードを引く);


//「勝負する！」ボタン押下時の処理
document.querySelector("ボタンのID").addEventListener("click", 勝負する);



//「もう１回遊ぶ」ボタン押下時の処理
document.querySelector("ボタンのID").addEventListener("click", もう1回遊ぶ);

/***********************************************
  イベントハンドラ
************************************************/
//ページ読み込み時の初期処理
function 初期処理() {
  //シャッフル
  //自分がカードを引く
  //相手がカードを引く
  //画面を更新する
}
function シャッフル(){
  for (/*100回繰り返す*/let i = 0; i < 100; i++){
    //カードの山からランダムに選んだ２枚を入れ替える
  }
}

//「カードを引く」ボタン押下時の処理
function カードを引く(){
  if (勝敗が未決定){//もしもflagが降りていたら
  //自分がカードを引く
  //相手がカードを引く
  //画面を更新する
  }
}

function 自分がカードを引く(){
  if(自分のカード(配列)が4枚以下){
    //カードの山（配列）から1枚取り出す
    //取り出した1枚を自分のカードに追加する
  }
}

function 相手がカードを引く(){
  if(相手のカード(配列)が4枚以下){
    if(カードを引くか考える){
      //カードの山（配列）から1枚取り出す
      //取り出した1枚を自分のカードに追加する
    }
  }
}

//カードを引くか考える関数
function カードを引くか考える {
  //カードを引くか引かないか戻り値で返す
}

//画面を更新する関数
function 画面を更新する(){
  //自分のカードを表示する
  //相手のカードを表示する
  //カードの合計を再計算する
}

//自分のカードを表示する
for(iを5回繰り返す){
  if(自分のカードの枚数がiより大きい){
  //表面の画像を表示する
  }else{
    //裏面の画像を表示する
  }
}

//相手のカードを表示する
for(iを5回繰り返す){
  if(相手のカードの枚数がiより大きい){
  //表面の画像を表示する
  }else{
    //裏面の画像を表示する
  }
}

//勝敗を判定する関数
function 勝敗を判定する(){
  //自分のカードの合計を求める
  //相手のカードの合計を求める
  //勝敗のパターン表に当てはめて勝敗を決める
  //勝敗を呼び出し元に返す
}

//「勝負する！」ボタン押下時の処理
function 勝負する(){
  if (勝敗が未決定){//もしもflagが降りていたら
  //勝敗を判定する
  //勝敗を画面に表示する
  //勝敗決定フラグを「決定」に変更
  }
}

//「もう１回遊ぶ」ボタン押下時の処理
function もう1回遊ぶ(){
  //画面を初期表示に戻す
  //relodeメソッドで画面を再読み込みする
}


/***********************************************
  ゲーム関数
************************************************/

/***********************************************
  デバッグ関数
************************************************/
function debug{
  console.log("カードの山", カードの山);
  console.log("自分のカード", 自分のカード);
  console.log("相手のカード", 相手のカード);
  console.log("勝敗決定フラグ", 勝敗決定フラグ);
}


